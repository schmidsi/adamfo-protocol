type PoolCreated @entity {
  id: ID!
  childAddress: Bytes! # address
  members: [Bytes!]! # address[]
}

type RegisterExpense @entity {
  id: ID!
  payer: Bytes! # address
  participants: [Bytes!]! # address[]
  amount: BigInt! # uint256
  description: String! # string
}

type TransferBatch @entity {
  id: ID!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  ids: [BigInt!]! # uint256[]
  values: [BigInt!]! # uint256[]
}

type TransferSingle @entity {
  id: ID!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt! # uint256
}

type URI @entity {
  id: ID!
  value: String! # string
}

type Pool @entity {
  id: Bytes!
  totalDeptCredit: BigInt!
  members: [Bytes!]!
  poolFrens: [PoolFren!]! @derivedFrom(field: "pool")
}

type PoolFren @entity {
  id: Bytes!
  pool: Pool!
  fren: Fren!
  deptCredit: BigInt!
}

type Fren @entity {
  id: Bytes!
  poolFrens: [PoolFren!]! @derivedFrom(field: "fren")
  totalDeptCredit: BigInt!
}
